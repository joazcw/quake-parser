{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is an API for parsing Quake 3 Arena log files and providing game statistics.",
        "title": "Quake Log Parser API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/games": {
            "get": {
                "description": "Retrieves a list of all game reports stored in the database, sorted by game ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Get all game reports",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of game reports",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/reporter.GameReport"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve game reports",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Permanently removes all game reports from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Delete all game reports",
                "responses": {
                    "200": {
                        "description": "All game reports deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/main.SuccessResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to delete all game reports",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/games/upload": {
            "post": {
                "description": "Uploads a game log file (.log). The server parses it, generates game reports, and stores them.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Upload a Quake log file for processing",
                "parameters": [
                    {
                        "type": "file",
                        "description": "The Quake log file to upload",
                        "name": "logFile",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Log file processed. No games found to report (already OK if file is valid but empty of games)",
                        "schema": {
                            "$ref": "#/definitions/main.UploadResponse"
                        }
                    },
                    "201": {
                        "description": "Log file processed and game(s) stored successfully",
                        "schema": {
                            "$ref": "#/definitions/main.UploadResponse"
                        }
                    },
                    "400": {
                        "description": "Error retrieving/parsing uploaded file or invalid file format",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error during file processing or storage",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/games/{id}": {
            "get": {
                "description": "Retrieves full details for a specific game based on its unique ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Get a single game report by its ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Game ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved game report",
                        "schema": {
                            "$ref": "#/definitions/reporter.GameReport"
                        }
                    },
                    "400": {
                        "description": "Invalid game ID format",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Game not found",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve game data",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Permanently removes a single game report based on its unique ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Delete a specific game report by its ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Game ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Game deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/main.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid game ID format",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Game not found",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to delete game report",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/playersranking": {
            "get": {
                "description": "Retrieves a list of players ranked by their total kills across all recorded games.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rankings"
                ],
                "summary": "Get aggregated player rankings across all games",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved player rankings",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/reporter.PlayerRankEntry"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve player rankings",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "main.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "main.UploadResponse": {
            "type": "object",
            "properties": {
                "games_processed": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "reporter.GameReport": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "kills": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "kills_by_means": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "players": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "total_kills": {
                    "type": "integer"
                }
            }
        },
        "reporter.PlayerRankEntry": {
            "type": "object",
            "properties": {
                "player_name": {
                    "type": "string"
                },
                "total_kills": {
                    "type": "integer"
                }
            }
        }
    }
}